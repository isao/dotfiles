[user]
	name = Isao Yagi
    useConfigOnly = true

[core]
    excludesfile = ~/.gitignore

    ; https://news.ycombinator.com/item?id=11388479
    untrackedCache = true

[color]
    ui = auto

[pager]
    ; https://github.com/dandavison/delta
    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]
    diffFilter = delta --color-only
    singleKey = true

[pack]
    ;use all cpu cores
    threads = 0

[push]
    default = current

[pull]
	ff = only

[credential]
    ;for https git uris w/ auth
    helper = osxkeychain

[github]
    user = isao
    password = !security find-generic-password -w -s github.password

[alias]
    ; list these git aliases
    aliases = config --get-regexp ^alias[.]

    ; list changed files on this branch compared to argument $1 or main. Tip:
    ; use like `git changed | fzf` to access files modified on the branch, or
    ; `git changed | lint`.
    changed = !"git diff --name-only $(git merge-base ${1:-main} head)"

    ; http://stackoverflow.com/questions/3065650
    conflicts = diff --name-only --diff-filter=U

    ; in every repo reachable from cwd, do fetch-all
    fetchcrazy = !"find . -type d -name .git -depth 3 -execdir pwd \\; -execdir git fetch --all \\;"

    ; TODO git lg | fzf | fixup
    fixup = commit --fixup

    ; log fuller
    lf = log --graph --stat --decorate --pretty=fuller

    ; log shorter
    ; %cd               -> 2017-06014
    ; %C(auto)%h        -> 5259c11bd5 short commit sha
    ; %<(12,trunc)%an   -> author name, truncated to 12 characters w/ elipses
    ; %<(80,trunc)%s    -> commit subject, truncated to 80 characters w/ elipses
    ; %d                -> (removed) decorate output, i.e. origin/main...
    lg = log --format='%cd %C(auto)%h %<(12,trunc)%an %<(55,trunc)%s' --date=short

    rbi = rebase -i --autostash --autosquash

    ; Preview the `git rmmerged` alias below.
    showmerged = !git branch --merged | egrep -v '^[^ ]|release/|master|main'

    ; Remove branches that are 1. merged with the current branch, 2. not checked
    ; out in another worktree, and 3. names don't contain "main" or "release/".
    rmmerged = !git showmerged | xargs -n 1 git branch -d

    ; In every repo reachable from cwd, do status and summarize results
    ; https://github.com/isao/shell/blob/master/git-statuscrazy.sh
    statuscrazy = !"find . -type d -name .git -execdir git-statuscrazy.sh \\;"

    ; Stash files that are not staged.
    stash-unstaged = !git stash --keep-index

    ; Stash only the staged changes, from Hsieh Chin Fan.
    ;   https://github.com/typebrook/settings/blob/dev/gitconfig
    ; How it works:
    ; 1. Stash everything, but leave a copy of staged changes alone.
    ;       git stash --keep-index
    ; 2. Stash the remaining changes, the things that were staged.
    ;       git stash
    ; 3. Restore the original stash with all the changes.
    ;       git stash pop stash@{1}
    ; 4. Remove/reverse the previously staged changes from the working area.
    ;       git stash show --patch | git apply --reverse
    stash-staged = !git stash --keep-index && \
       git stash && \
       git stash pop stash@{1} && \
       git stash show --patch | git apply --reverse

    # http://bit.ly/1Yx9OQM
    ;assume   = update-index --assume-unchanged
    ;unassume = update-index --no-assume-unchanged
    ;assumed  = '!git ls-files -v | grep ^h | cut -c 3-'


; bbedit
[diff]
    tool = bbdiff
    algorithm = histogram
    colorMoved = default
    compactionHeuristic = true

[difftool]
    prompt = no

[difftool "bbdiff"]
    cmd = bbdiff --wait --resume "$LOCAL" "$REMOTE"

[merge]
    tool = opendiff
    ;tool = bbdiff

[mergetool]
    prompt = no
    keepBackup = false

[mergetool "bbdiff"]
    cmd = bbdiff --wait --resume "$LOCAL" "$REMOTE"

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true

[delta]
    ; https://github.com/dandavison/delta
    hyperlinks = true
    light = true
    line-numbers-left-format = ""
    line-numbers-right-format = "â”‚ "
    navigate = true
    side-by-side = true
