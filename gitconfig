[user]
    name = Isao Yagi
    email = isao.yagi@gmail.com

[core]
    excludesfile = ~/.gitignore
    autocrlf = input

    ; tell git that trailing cr is ok, ignore in diffs et al
    whitespace = cr-at-eol

    ; https://news.ycombinator.com/item?id=11388479
    untrackedCache = true

[pager]
    ;$(brew --prefix git) -> /usr/local/opt/git
    ;log  = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
    ;show = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
    ;diff = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
    ;diff = diff-so-fancy | less --tabs=4 -RFX
    ;show = diff-so-fancy | less --tabs=4 -RFX

[interactive]
    diffFilter = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight
    singleKey = true

[pack]
    ;use all cpu cores
    threads = 0

[push]
    default = current

[credential]
    ;for https git uris w/ auth
    helper = osxkeychain

[alias]
    ; open all unique remote urls in a browser
    ;open = !open `git remote -v|perl -ne'm~([\\w.-]+\\.com)[:/](\\S+)\\.git~,print qq(http://$1/$2\n)'|uniq`

    ; Get the last part of a branch name containing slashes.
    basename = !"basename $(git rev-parse --abbrev-ref HEAD)"

    ; in every repo reachable from cwd, do fetch-all
    fetchcrazy = !"find . -type d -name .git -execdir git fetch --all -v \\;"

    ; in every repo reachable from cwd, do status and summarize results
    ; https://github.com/isao/shell/blob/master/git-statuscrazy.sh
    statuscrazy = !"find . -type d -name .git -execdir git-statuscrazy.sh \\;"

    ; After fetching, remove any remote-tracking branches which no longer exist on the remote.
    fu = fetch --prune

    ; http://stackoverflow.com/questions/3065650/whats-the-simplest-way-to-git-a-list-of-conflicted-files
    conflicts = "diff --name-only --diff-filter=U"

    ; fetch a github pull request: git pr <remote> <prnumber>
    ; @gnarf https://gist.github.com/piscisaureus/3342247#comment-817399
    checkout-github-pr = "!f() { git fetch $1 refs/pull/$2/head:pr/$2; } ; f"

    ; remote update & show heads (https://github.com/isao/git-heads)
    reup = !git remote update && git heads

    ; push to all remotes
    pub = !"for i in `git remote`; do echo $i...; git push -v $i; done"

    lf = log --graph --stat --decorate --pretty=fuller

    # %cd               -> 2017-06014
    # %C(auto)%h        -> 5259c11bd5 short commit sha
    # %<(12,trunc)%an   -> author name, truncated to 12 characters w/ elipses
    # %<(80,trunc)%s    -> commit subject, truncated to 80 characters w/ elipses
    # %d                -> (removed) decorate output, i.e. origin/master...
    # e.g.:
    # 2017-06-14 d158a92cf7 Isao Yagi    App reload changes. #MF-65977 #MF-66030
    lg = log --format='%cd %C(auto)%h %<(12,trunc)%an %<(55,trunc)%s' --date=short

    # http://bit.ly/1Yx9OQM
    assume   = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed  = '!git ls-files -v | grep ^h | cut -c 3-'

[github]
    user = isao
    password = !security find-generic-password -ws github.password

; bbedit
[diff]
    tool = bbdiff
    algorithm = histogram
    compactionHeuristic = true

[difftool]
    prompt = no

[difftool "bbdiff"]
    cmd = bbdiff --wait --resume "$LOCAL" "$REMOTE"

[alias]
    bbdiff = difftool

[merge]
    tool = opendiff

[mergetool]
    prompt = no
    keepBackup = false

[mergetool "bbdiff"]
    cmd = bbdiff --wait --resume "$LOCAL" "$REMOTE"

[alias]
    bbmerge = mergetool

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true

[color]
	ui = auto
