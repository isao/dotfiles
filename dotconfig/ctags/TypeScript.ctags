# Custom TypeScript parser to compare against built-in
--languages=-TypeScript
--langdef=MyTypeScript
--langmap=MyTypeScript:.ts
--langmap=MyTypeScript:+.tsx
--regex-MyTypeScript=/^[ \t]*(export([ \t]+)?)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\3/c,classes/
--regex-MyTypeScript=/^[ \t]*(declare)?[ \t]*namespace[ \t]+([a-zA-Z0-9_.]+)/\2/n,modules/
--regex-MyTypeScript=/^[ \t]*(export|declare)?[ \t]*module[ \t]+([a-zA-Z0-9_.]+)/\2/n,modules/
--regex-MyTypeScript=/^[ \t]*(export|declare)?[ \t]*function[ \t]+([a-zA-Z0-9_]+)/\2/f,functions/
#--regex-MyTypeScript=/^[ \t]*(export|declare)?[ \t]+(var|let|const)[ \t]+([a-zA-Z0-9_]+)/\3/v,variables/
--regex-MyTypeScript=/^[ \t]*(public|protected|private)[ \t]+(static)?[ \t]*(get|set)?[ \t]*([a-zA-Z0-9_]+)/\4/m,members/
--regex-MyTypeScript=/^[ \t]+([a-zA-Z0-9_]+)(<[^>]+>)?\([^\)]*\): .+ \{/\1/m,members/
--regex-MyTypeScript=/^[ \t]*(export)?[ \t]*interface[ \t]+([a-zA-Z0-9_]+)/\2/i,interfaces/
--regex-MyTypeScript=/^[ \t]*(export)?[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\2/t,types/
--regex-MyTypeScript=/^[ \t]*enum[ \t]+([a-zA-Z0-9_]+)/\1/e,enums/
#--regex-MyTypeScript=/^import[ \t]+([a-zA-Z0-9_]+)/\1/I,imports/
