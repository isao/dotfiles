#!/bin/bash -eu
set -o pipefail

repo_abspath="$(cd "$(dirname "$0")" && git rev-parse --show-toplevel)"
my_dot_files="$repo_abspath/home"
my_bin_files="$repo_abspath/bin"

# ln flags:
# -h: don't follow symlinks (replace the symlink itself)
# -i: prompt before overwriting
# -s: symbolic link
# -v: verbose
symlink='ln -hisv'

# Set DRY_RUN to echo instead of execute commands.
run() {
  if [[ -n "${DRY_RUN:-}" ]]; then
    echo "DRY RUN:" "$@"
  else
    "$@"
  fi
}

# Symlink files from `./home/*` to `$HOME/`:
# - add a "." to the symlinked file, so the git-tracked ones don't need to be
#   hidden from default filesystem commands.
# - create matching parent directory(ies) in `$HOME/`, if the exist in `./home`.
#
# Example:
#   ./home/zshrc          -> $HOME/.zshrc
#   ./home/config/foo/bar -> $HOME/.config/foo/bar
#
# Safety:
# - Only symlinks file (creates directories as needed, never removes them).
# - Prompts before overwriting existing files (`ln -i` flag).
# - Skips hidden files (like `.DS_Store`) and *-disabled files in the repo.
echo "* Symlinking dotfiles."

# Change the working directory for `fd` to output the relative path.
cd "$my_dot_files"
while read -r source_file
do
  # Add a "." dot prefix to source pathnames.
  link_file=".${source_file}"

  # The source file's parent directory name, relative to `./home`.
  link_dir="$(dirname "$link_file")"

  # If the source file is in a subdirectory, make the corresponding directory
  # structure in `$HOME`, if needed.
  if [[ "$(dirname "$source_file")" != '.' && ! -e "$HOME/$link_dir" ]]
  then
    run mkdir -pv "$HOME/$link_dir"
  fi

  # shellcheck disable=SC2217
  run $symlink "$my_dot_files/$source_file" "$HOME/$link_file" </dev/tty || true
  # Note: `</dev/tty || true` enables -i prompts inside the while/read loop.

done < <(fd --type f --exclude '*-disabled')

# Fix permissions. `git` operations will apply the default `umask`, but these
# should be more restrictive. `chmod` follows symlinks.
echo "* Setting permissions."
run chmod -vv 700 "$HOME/.ssh"
run chmod -vv 600 "$HOME/.ssh/config" "$HOME/.ssh/config-"* 2>/dev/null || true

# Symlink to files from `./bin/*.sh` in `$HOMEBREW_PREFIX/bin/`.
# - Remove the ".sh" extension from the symlink filename.
# - Cleanup any/all broken symlinks.
echo "* Symlinking binfiles."
BIN_PATH="$HOMEBREW_PREFIX/bin"

if [[ -d "$BIN_PATH" ]] && command -v brew >/dev/null 2>&1
then
    for my_bin_file in "$my_bin_files/"*.sh
    do
      run $symlink "$my_bin_file" "$BIN_PATH/$(basename "$my_bin_file" .sh)"
    done
    echo "* Cleanup."
    run brew cleanup --prune-prefix --verbose
fi

echo "* Done."
