#!/bin/sh -e

# This script is for doing things before a laptop goes to sleep, and on
# awakening. It's not useful for a workstation as-is.
#
# To use, install these tools, using source or homebrew:
# 1. sleepwatcher <http://www.bernhard-baehr.de/>
# 2. blueutil <http://www.frederikseiffert.de/blueutil/>
#
# Then symlink both ~/.sleep and ~/.wakeup to this script, so it's invoked
# by the homebrew default LaunchAgent config for "sleepwatcher", which is:
#
#   /usr/local/sbin/sleepwatcher -V -s ~/.sleep -w ~/.wakeup


#
# vars
#

blueutil=/usr/local/bin/blueutil

#
# checks
#

if [[ ! -x $blueutil ]]
then
    logger -s 'Required tool $blueutil was not found.'
    logger -s 'Install it via homebrew, or <http://www.frederikseiffert.de/blueutil/>'
    exit 1
fi

#
# functions
#

# log
log()
{
    logger -t "$0" -s "$1"
}

# bluetooth "on" or "off"
bluetooth_status()
{
    if [[ $($blueutil status) =~ (on|off)$ ]]
    then
        echo ${BASH_REMATCH[1]}
    else
        log 'oh geez. cannot get bluetooth status.'
        exit 3
    fi
}

# check for external monitor(s)
have_external_monitor()
{
    # FIXME: system_profiler is veerrry slow
    system_profiler SPDisplaysDataType |\
        grep 'Display Serial Number:' &>/dev/null
}

# Turn bluetooth OFF if there is no external monitor attached. Unless
# there is an external monitor, I don't want my laptop attempting to
# connect to the bluetooth keyboard and trackpad, which will drain battery
bluetooth_OFF_if_roaming()
{
    if [[ $(bluetooth_status) == 'on' && ! have_external_monitor ]]
    then
        log 'turning bluetooth OFF'
        $blueutil off &
    fi
}

# Turn bluetooth ON if it is currently off
bluetooth_ON()
{
    if [[ $(bluetooth_status) == 'off' ]]
    then
        log 'turning bluetooth ON'
        $blueutil on
    fi
}

# unmount all usb drives
unmount_usb_drives()
{
    system_profiler SPUSBDataType | grep 'Mount Point:' |\
    while read ignore1 ignore2 mountpoint
    do
        log "unmounting $mountpoint"
        diskutil unmount "$mountpoint"
    done
}

#
# main
#

if [[ $0 =~ [.]sleep$ ]]
then
    unmount_usb_drives
    bluetooth_ON
fi

if [[ $0 =~ [.]wakeup$ ]]
then
    bluetooth_OFF_if_roaming
fi
